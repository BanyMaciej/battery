/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found.  It
 * should not be modified by hand.
 */

package com.example.battery;

public final class R {
    public static final class attr {
    }
    public static final class dimen {
        /**  Default screen margins, per the Android Design guidelines. 

         Example customization of dimensions originally defined in res/values/dimens.xml
         (such as screen margins) for screens with more than 820dp of available width. This
         would include 7" and 10" devices in landscape (~960dp and ~1280dp respectively).
    
         */
        public static final int activity_horizontal_margin=0x7f050000;
        public static final int activity_vertical_margin=0x7f050001;
    }
    public static final class drawable {
        public static final int header=0x7f020000;
        public static final int ic_launcher=0x7f020001;
        public static final int ic_power_system=0x7f020002;
        public static final int ic_settings_bluetooth=0x7f020003;
        public static final int ic_settings_cell_standby=0x7f020004;
        public static final int ic_settings_display=0x7f020005;
        public static final int ic_settings_phone_idle=0x7f020006;
        public static final int ic_settings_voice_calls=0x7f020007;
        public static final int ic_settings_wifi=0x7f020008;
    }
    public static final class id {
        public static final int appIcon=0x7f080001;
        public static final int appName=0x7f080002;
        public static final int batteryUsageList=0x7f080000;
        public static final int progress=0x7f080004;
        public static final int txtProgress=0x7f080003;
    }
    public static final class layout {
        public static final int activity_main=0x7f030000;
        public static final int listview_item=0x7f030001;
    }
    public static final class string {
        public static final int action_settings=0x7f060002;
        public static final int app_name=0x7f060000;
        /**  CPU awake time title 
         */
        public static final int awake=0x7f06001a;
        /**  Used to show an amount of time in the form "d days, h hours, m minutes, s seconds" in BatteryHistory 
         */
        public static final int battery_history_days=0x7f06002a;
        /**  Used to show an amount of time in the form "h hours, m minutes, s seconds" in BatteryHistory 
         */
        public static final int battery_history_hours=0x7f06002b;
        /**  Used to show an amount of time in the form "m minutes, s seconds" in BatteryHistory 
         */
        public static final int battery_history_minutes=0x7f06002c;
        /**  Used to show an amount of time in the form "s seconds" in BatteryHistory 
         */
        public static final int battery_history_seconds=0x7f06002d;
        /**  Battery Info screen. Value for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_status_charging=0x7f060022;
        /**  Battery Info screen. Units shown after a value.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_status_charging_ac=0x7f060023;
        /**  Battery Info screen. Units shown after a value.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_status_charging_usb=0x7f060024;
        /**  Battery Info screen. Units shown after a value.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_status_charging_wireless=0x7f060025;
        /**  Battery Info screen. Value for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_status_discharging=0x7f060026;
        /**  Battery Info screen. Value for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_status_full=0x7f060028;
        /**  Battery Info screen. Value for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_status_not_charging=0x7f060027;
        /**  Battery Info screen. Value for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_status_unknown=0x7f060021;
        /**  Battery usage since user reset the stats 
         */
        public static final int battery_since_reset=0x7f060010;
        /**  Battery usage since unplugged 
         */
        public static final int battery_since_unplugged=0x7f06000f;
        /**  [CHAR LIMIT=25] Label for battery stats charging state graph 
         */
        public static final int battery_stats_charging_label=0x7f060013;
        /**  Battery usage duration 
         */
        public static final int battery_stats_duration=0x7f060012;
        /**  [CHAR LIMIT=25] Label for battery stats gps on state graph 
         */
        public static final int battery_stats_gps_on_label=0x7f060015;
        /**  Battery usage during last unplugged period 
         */
        public static final int battery_stats_last_duration=0x7f060019;
        /**  Battery usage on battery duration 
         */
        public static final int battery_stats_on_battery=0x7f060011;
        /**  [CHAR LIMIT=25] Label for battery stats phone signal strength graph 
         */
        public static final int battery_stats_phone_signal_label=0x7f060018;
        /**  [CHAR LIMIT=25] Label for battery stats screen on state graph 
         */
        public static final int battery_stats_screen_on_label=0x7f060014;
        /**  [CHAR LIMIT=25] Label for battery stats wake lock state graph 
         */
        public static final int battery_stats_wake_lock_label=0x7f060017;
        /**  [CHAR LIMIT=25] Label for battery stats wifi running state graph 
         */
        public static final int battery_stats_wifi_running_label=0x7f060016;
        /**  Bluetooth on time 
         */
        public static final int bluetooth_on_time=0x7f06001c;
        public static final int hello_world=0x7f060001;
        public static final int menu_stats_last_unplugged=0x7f06001e;
        /**  Representation of a numerical percentage. [CHAR LIMIT=8] 
         */
        public static final int percentage=0x7f060029;
        public static final int power_bluetooth=0x7f060005;
        public static final int power_cell=0x7f060006;
        public static final int power_idle=0x7f060008;
        public static final int power_phone=0x7f060007;
        public static final int power_screen=0x7f060003;
        /**  Display the battery level and status [CHAR_LIMIT=30] 
         */
        public static final int power_usage_level_and_status=0x7f06000e;
        /**  Message to show when battery usage data is not available [CHAR LIMIT=30] 
         */
        public static final int power_usage_not_available=0x7f06000d;
        /**  Activity title summary for App Fuel Gauge summary 
         */
        public static final int power_usage_summary=0x7f06000c;
        /**  Activity title for App Fuel Gauge summary 
         */
        public static final int power_usage_summary_title=0x7f06000b;
        public static final int power_wifi=0x7f060004;
        public static final int process_kernel_label=0x7f060009;
        public static final int process_mediaserver_label=0x7f06000a;
        /**  [CHAR LIMIT=NONE] Label of a running process that represents a removed 
         */
        public static final int running_process_item_removed_user_label=0x7f060020;
        public static final int running_process_item_user_label=0x7f06001f;
        /**  Application name and battery usage percentage 
         */
        public static final int usage_name_percent=0x7f06001d;
        /**  Wifi on time 
         */
        public static final int wifi_on_time=0x7f06001b;
    }
    public static final class style {
        /** 
        Base application theme, dependent on API level. This theme is replaced
        by AppBaseTheme from res/values-vXX/styles.xml on newer devices.
    

            Theme customizations available in newer API levels can go in
            res/values-vXX/styles.xml, while customizations related to
            backward-compatibility can go here.
        

        Base application theme, dependent on API level. This theme is replaced
        by AppBaseTheme from res/values-vXX/styles.xml on newer devices.
    

            Theme customizations available in newer API levels can go in
            res/values-vXX/styles.xml, while customizations related to
            backward-compatibility can go here.
        
         */
        public static final int AppTheme=0x7f070000;
    }
    public static final class xml {
        public static final int power_profile=0x7f040000;
    }
    public static final class styleable {
        /** Attributes that can be used with a BatteryHistoryChart.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #BatteryHistoryChart_android_shadowColor android:shadowColor}</code></td><td> Place a shadow of the specified color behind the text.</td></tr>
           <tr><td><code>{@link #BatteryHistoryChart_android_shadowDx android:shadowDx}</code></td><td> Horizontal offset of the shadow.</td></tr>
           <tr><td><code>{@link #BatteryHistoryChart_android_shadowDy android:shadowDy}</code></td><td> Vertical offset of the shadow.</td></tr>
           <tr><td><code>{@link #BatteryHistoryChart_android_shadowRadius android:shadowRadius}</code></td><td> Radius of the shadow.</td></tr>
           <tr><td><code>{@link #BatteryHistoryChart_android_textAppearance android:textAppearance}</code></td><td> Base text color, typeface, size, and style.</td></tr>
           <tr><td><code>{@link #BatteryHistoryChart_android_textColor android:textColor}</code></td><td> Text color.</td></tr>
           <tr><td><code>{@link #BatteryHistoryChart_android_textSize android:textSize}</code></td><td> Size of the text.</td></tr>
           <tr><td><code>{@link #BatteryHistoryChart_android_textStyle android:textStyle}</code></td><td> Style (bold, italic, bolditalic) for the text.</td></tr>
           <tr><td><code>{@link #BatteryHistoryChart_android_typeface android:typeface}</code></td><td> Typeface (normal, sans, serif, monospace) for the text.</td></tr>
           </table>
           @see #BatteryHistoryChart_android_shadowColor
           @see #BatteryHistoryChart_android_shadowDx
           @see #BatteryHistoryChart_android_shadowDy
           @see #BatteryHistoryChart_android_shadowRadius
           @see #BatteryHistoryChart_android_textAppearance
           @see #BatteryHistoryChart_android_textColor
           @see #BatteryHistoryChart_android_textSize
           @see #BatteryHistoryChart_android_textStyle
           @see #BatteryHistoryChart_android_typeface
         */
        public static final int[] BatteryHistoryChart = {
            0x01010034, 0x01010095, 0x01010096, 0x01010097,
            0x01010098, 0x01010161, 0x01010162, 0x01010163,
            0x01010164
        };
        /**
          <p>
          @attr description
           Place a shadow of the specified color behind the text. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#shadowColor}.
          @attr name android:shadowColor
        */
        public static final int BatteryHistoryChart_android_shadowColor = 5;
        /**
          <p>
          @attr description
           Horizontal offset of the shadow. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#shadowDx}.
          @attr name android:shadowDx
        */
        public static final int BatteryHistoryChart_android_shadowDx = 6;
        /**
          <p>
          @attr description
           Vertical offset of the shadow. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#shadowDy}.
          @attr name android:shadowDy
        */
        public static final int BatteryHistoryChart_android_shadowDy = 7;
        /**
          <p>
          @attr description
           Radius of the shadow. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#shadowRadius}.
          @attr name android:shadowRadius
        */
        public static final int BatteryHistoryChart_android_shadowRadius = 8;
        /**
          <p>
          @attr description
           Base text color, typeface, size, and style. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#textAppearance}.
          @attr name android:textAppearance
        */
        public static final int BatteryHistoryChart_android_textAppearance = 0;
        /**
          <p>
          @attr description
           Text color. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#textColor}.
          @attr name android:textColor
        */
        public static final int BatteryHistoryChart_android_textColor = 4;
        /**
          <p>
          @attr description
           Size of the text. Recommended dimension type for text is "sp" for scaled-pixels (example: 15sp). 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#textSize}.
          @attr name android:textSize
        */
        public static final int BatteryHistoryChart_android_textSize = 1;
        /**
          <p>
          @attr description
           Style (bold, italic, bolditalic) for the text. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#textStyle}.
          @attr name android:textStyle
        */
        public static final int BatteryHistoryChart_android_textStyle = 3;
        /**
          <p>
          @attr description
           Typeface (normal, sans, serif, monospace) for the text. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#typeface}.
          @attr name android:typeface
        */
        public static final int BatteryHistoryChart_android_typeface = 2;
    };
}
